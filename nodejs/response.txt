1. res.render(view[,locals][,callback]) --渲染view并将呈现的html字符串带到客户端。
	locals,一个对象，其属性定义为视图的局部变量
	exp:
	res.render('user', { name: 'Tobi' }, function(err, html) {
	  if(!err){
	  		res.end(html);
	  }
	});

2.res.send([body]) -- 发送http响应
	所述body参数可以是一个Buffer对象，一个String，对象，或一个Array。例如：
	res.send(new Buffer('whoop'));
	res.send({ some: 'json' });
	res.send('<p>some html</p>');
	res.status(404).send('Sorry, we cannot find that!');
	res.status(500).send({ error: 'something blew up' });

1>当参数是一个Buffer对象,该方法将Content-Type为"application/octet-stream",除非如下所示先前所定义：
	res.set('Content-Type', 'text/html');
	res.send(new Buffer('<p>some html</p>'));
2>当参数是String，该方法将Content-Type为"text/html"
3>当参数是数组或者对象时，将以 JSON 返回

3.状态码
res.sendStatus(200);  <==>  res.status(200).send('OK');
res.sendStatus(403); <==>  res.status(403).send('Forbidden');
res.sendStatus(404);  <==>  res.status(404).send('Not Found')
res.sendStatus(500);  <==>  res.status(500).send('Internal Server Error')
res.sendStatus(2000);  <==>  res.status(2000).send('2000')

res.status(403).end();
res.status(400).send('Bad Request');
res.status(404).sendFile('/absolute/path/to/404.png'); 