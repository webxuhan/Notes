1.注册完之后——>随机生成一个字符串-> 在 redis 中存储这个字符串对应的用户 id -> 发送包含这个字符串的链接给邮箱 ->用户点击链接，后台根据这个字符串，获取对应用户 id ->设置这个用户 id 状态为激活状态。

2.注册的过程中 -> 随机生成一个字符串 -> 在 redis 中设置当前注册的 id 对应这个字符串 -> 发送邮件，提示激活码为这个字符串 ->显示一个网页，提示需要输入邮箱接收到的字符串 -> 用户去邮箱中复制出这个字符串，粘贴到网页中 -> 提交字符串 提示注册成功，否则失败。

3.那就在注册的第一步只要用户填写邮箱，然后发送一枚 token 作为 parameter 的 URL 到用户邮箱，用户再点击这个 URL 进入后续的注册操作。 

用户点击这个 URL 注册的时候需要验证他再次填写的邮箱和第一步填写的邮箱一致，不然不予以注册通过。 

这枚 Token 可以存在服务端的 redis 中， key , value 就设置成 token, email ，设定比如 15 分钟的期限。 

4.数据库 用户名加个字段 1 或者 0 判断激活没有 然后随机字符串无所谓 直接 md5 他的信箱就好了 看我多机智。点击了 update 一下数据库